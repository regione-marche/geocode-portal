@model NuovoPortaleGeo.ViewModels.VmUpload



@using System.Data;
@{
    ViewBag.Title = "Upload";
}

<h2>Caricamento File CSV</h2>


<style>
    table {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        table td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        table tr:hover {
            background-color: #ddd;
        }

        table th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #ff6600;
            color: white;
        }
</style>

@using (Html.BeginForm(Html.BeginForm("Upload", "Home", null, FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="row">
        @* <div class="form-control">
                @Html.LabelFor(model => model.IdUtente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdUtente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.IdUtente, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

    </div>

    <div>
        <div class="row">
            <div class="col-sm-3">
                @Html.TextBox("upload", "", new { @class = "form-control", @type = "file", @id = "upload", @name = "upload", @accept = ".csv" })
            </div>
            <div class="col-sm-1">
                <img src="~/Images/download.png" class="rounded-circle" id="conferma" height="25" style="display:none" />
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.DescrizioneFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescrizioneFile, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "DescrizioneFile" } })
                @Html.ValidationMessageFor(model => model.DescrizioneFile, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    <br />






    <div class="col-sm-5">
        <label title="Attiva Geo">
            Attiva Georeferenzazione
            <input type="checkbox" id="CheckGeo" />
        </label>
    </div>
    <div class="row">


        <br />
        <br />
        <br />

        @*  <div id="selezione" style="display:none">
                    <p>Seleziona Sistema di Georeferenzazione:</p>

                    <div>
                        <input type="radio" id="OpenStreetMap" name="drone" value="OpenStreetMap">
                        <label for="OpenStreetMap">OpenStreetMap</label>
                    </div>

                    <div>
                        <input type="radio" id="dewey" name="drone" value="Here">
                        <label for="Here">Here</label>
                    </div>
                </div>
            </div>*@

        <div class="col-md" id="seleziona" style="display:none">


            <h4>@Html.Label("Seleziona Sistema:", htmlAttributes: new { @class = "control-label col-md-5" })</h4>
            @Html.Label("Here:", htmlAttributes: new { @class = "control-label col-md-5" })
            @Html.DropDownListFor(model => model.Here, new List<SelectListItem>()
     {
        new SelectListItem() { Text = "NON ATTIVO", Value = "False"},
        new SelectListItem() { Text = "ATTIVA", Value = "True" }

     }, new { @id = "Here", @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Here)

            @Html.Label("OpenStreetMap:", htmlAttributes: new { @class = "control-label col-md-5" })
            @Html.DropDownListFor(model => model.OpenStreetMap, new List<SelectListItem>()
      {
         new SelectListItem() { Text = "NON ATTIVO", Value = "False"},
         new SelectListItem() { Text = "ATTIVA", Value = "True" }

     }, new { @id = "OpenStreetMap", @class = "form-control" })

            @Html.ValidationMessageFor(model => model.OpenStreetMap)

            @Html.Label("Google:", htmlAttributes: new { @class = "control-label col-md-5" })
            @Html.DropDownListFor(model => model.Google, new List<SelectListItem>()
       {
          new SelectListItem() { Text = "NON ATTIVO", Value = "False"},
          new SelectListItem() { Text = "ATTIVA", Value = "True" }

     }, new { @id = "Google", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Google)

        </div>

    </div>
    <br />
    <div class="row">
        <div class="col-sm-1">
            <input type="submit" value="upload" class="btn btn-dark" id="Carica" name="upload" />
        </div>
        <div class="col-sm-1">
            <input type="submit" value="Anteprima" class="btn btn-success" id="Carica" name="upload" />
        </div>
        <br />
        <br />
        <div class="input-container" style="display:none" id="divdelete">
            <i class="fas fa-trash-alt"></i>
            <input type="submit" value="SvuotaTabella" class="btn btn-outline-danger" id="delete" />
        </div>

        <div class="input-container" id="divExport">
            <div class="form-group">
                @Html.LabelFor(model => model.DescrizioneFile, "File da Esportare", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m=>m.DescrizioneFile, ViewBag.DescrizioneFile2 as SelectList,"", htmlAttributes: new { @class = "form-control" , @required = "required" })
                    @Html.ValidationMessageFor(m => m.DescrizioneFile, "", new { @class = "text-danger" })
                </div>
            </div>
            <a href="@Url.Action("Estrai", "Home")" class="btn btn-success" id="esporta">
                <i class="fas fa-download"></i> Estrai
            </a>
        </div>

    </div>
    <div>
        Seleziona colonne corrispondenti a questi campi:
    </div>
    <div class="row">
        <ul>
            <li>Provincia:</li>
            @* @Html.DropDownList("Provincia", ViewBag.Provincia as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "Provincia" })*@
            <li>Comune:</li> @*  @Html.DropDownList("Comune", ViewBag.Comune as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "Comune" })*@
            <li>Indirizzo:</li>
            @* @Html.DropDownList("Indirizzo", ViewBag.Indirizzo as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "Indirizzo" })*@
            <li>Cap:</li>
            @* @Html.DropDownList("Cap", ViewBag.Cap as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "Cap" })*@
            <li>AltroIndirizzo:</li>
            @* @Html.DropDownList("AltroIndirizzo", ViewBag.AltroIndirizzo as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "AltroIndirizzo" })*@
            <li>N_Civico:</li>
            @* @Html.DropDownList("N_Civico", ViewBag.N_Civico as SelectList, "", htmlAttributes: new { @class = "form-control", @id = "N_Civico" })*@
        </ul>
    </div>








    <style>
        #loading {
            transform: translate(30%);
            color: darkorange;
        }

        #table-wrapper {
            position: relative;
        }

        #table-scroll {
            height: 800px;
            overflow: auto;
            margin-top: 20px;
        }

        #table-wrapper table {
            width: 100%;
        }

            #table-wrapper table thead th .text {
                position: absolute;
                top: -20px;
                z-index: 2;
                height: 20px;
                width: 35%;
                border: 1px solid red;
            }
    </style>

    <br />
    <br />


    int count = 0;
    if (Model != null)
    {

        <div id="table-wrapper">
            <div id="table-scroll">
                <table id="DatiCsv" data-page-length='25'>
                    <thead>
                        <tr>
                            @foreach (DataColumn col in Model.Columns)
                            {


                                <th>@col.ColumnName</th>



                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DataRow row in Model.Rows)
                        {
                            if (count < 100)
                            {


                                <tr>
                                    @foreach (DataColumn col in Model.Columns)
                                    {

                                        <td>@row[col.ColumnName]</td>


                                    }
                                </tr>
                                count++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }


}

<!-- skipped -->


<hr />
@* $('document').hide().ready(function () {
    $('#loading').hide().ajaxStart(function () {
        $(this).show();
    })
        .ajaxStop(function () {
            $(this).hide();
        });*@

@section scripts{
    <script>
        $(document).ready(function () {

            $('#DescrizioneFile').prop("disabled", true);
            $("#upload").change(function () {
                for (var i = 0; i < localStorage.length; i++) {
                    $("#Provincia").append(new Option(localStorage.key(i)));
                }
                $('#conferma').show();
                $('#DescrizioneFile').prop("disabled", false);
                var file = $("#upload").val();
                var lunghezza = file.length;
                console.log(lunghezza);
                var filecorretto = file.substring(12, lunghezza);
                console.log(file);
                $('#DescrizioneFile').val(filecorretto);
            });

        //chiamata ajax per caricare colonne nelle dropdownlist
            $("#Carica").click(function () {
                    jQuery.ajax({
                                                //definisco il tipo della chiamata
                                                type: "POST",
                                                // specifico la URL della risorsa da contattare
                                                url: '@Url.Action("readcolumn", "Home")',
                                                // passo dei dati alla risorsa remota
                                                dataType: "json",
                                                //    contentType: 'application/json; charset=utf-8',
                                                // imposto un'azione per il caso di successo
                                                success: function (data) {
                                                // Salvo i dati geocodificata nel browser
                                                    const myArray = [];
                                                    var i = localStorage.length;
                                                    console.log(nome)
                                                    if (myArray[i] = 'undefined') {

                                                        myArray[i] = data.ritorno;
                                                        console.log(myArray[i]);


                                                        localStorage.setItem(nome, myArray[i]);
                                                        alert("Colonne Selezionabili");
                                                    }


                                                },

                                                error: function () {
                                                    alert("errore colonne");
                                                }

                    })

                var table = $('#DatiCSV').dataTable();
                console.log(table);
                $('#divdelete').show();
                $('#delete').click(function () {
                    table.destroy();
                    $("#DescrizioneFile").value = "";
                });
            });
        });
              $(document).on("click", "#esporta", function () {
                var Nome_File = $('#DescrizioneFile').val();
                  console.log($('#DescrizioneFile').val());

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "Conferma/Index",
                    data: { 'Name_File': Nome_File },
                    success: function (data) {
                        if (data.code === 1) {

                            alert("File Esportato con Successo")
                        } else

                            alert("File Non trovato")
                        }
                      
                    })
                });
           


                const checkbox = document.getElementById('CheckGeo')
                            checkbox.addEventListener('change', (event) => {
                                if (event.currentTarget.checked) {
                                    $('#seleziona').show();
                                } else {
                                    $('#seleziona').hide();
                                    $("#Here").val()== "False";
                                    $("#OpenStreetMap").val()=="False";
                                    $("#Google").val()=="False";
                                }
                            });

        const dropdownlist = document.getElementById('OpenStreetMap')

        dropdownlist.addEventListener('change',(event) => {
            var selectedVal = $(this).find(':selected').val();
            var selectedText = $(this).find(':selected').text();
            var Open = $("#OpenStreetMap").val();
            console.log(Open);

            if (Open =="True") {
                $('#Here').prop("disabled", true);
                $('#Google').prop("disabled", true)
                console.log("disattivati");
            }
            else if (Open == "False") {
                $('#Here').removeAttr("disabled");
                $('#Google').removeAttr("disabled");
                console.log("attivati");
            }
        });

        $("#Google").change(function () {
            var selectedVal = $(this).find(':selected').val();
            var selectedText = $(this).find(':selected').text();


            if (selectedText == "ATTIVA") {
                $('#OpenStreetMap').prop("disabled", true);
                $('#Here').prop("disabled", true);
            }
              else
            {
                $('#OpenStreetMap').prop("disabled", false);
                $('#Here').prop("disabled", false);
            }
        });

        $("#Here").change(function () {
            var selectedVal = $(this).find(':selected').val();
            var selectedText = $(this).find(':selected').text();

            if (selectedText == "ATTIVA") {
                $('#OpenStreetMap').prop("disabled", true);
                $('#Google').prop("disabled", true);
            }
              else
            {
                $('#OpenStreetMap').prop("disabled", false);
                $('#Google').prop("disabled", false);
            }
        });





    </script>
}

@model NuovoPortaleGeo.Models.Geo_Attività
@{ ViewBag.Title = "Mappa";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<!doctype html>
<html>
<head>
    <!-- stylesheet of Bootstrap-->
    <!--<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">-->
    <!--Leaflet's CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin="" />

    <!-- Make sure you put this AFTER Leaflet's CSS,    JS Leaflet -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin=""></script>

    <!--libreria ajax jquery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


    @*<script src="https://unpkg.com/leaflet-geosearch@3.0.0/dist/geosearch.umd.js"></script>*@


</head>

<body>
    <h2>MAPPA</h2>



    <style>
        #EliminaMarker {
            transform: translate(30%)
        }

        #mapid {
            width: 1300px;
            height: 620px;
        }

        #ElimnaDatiStorage {
            transform: translate(600%);
        }
    </style>

    <div class="form-group">
        @Html.Label("Seleziona Origine Dati:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OrigineDati", (SelectList)ViewBag.OrigineDati, htmlAttributes: new { @class = "select form-control" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            <button type="button" class="btn btn-outline-secondary" id="Seleziona">Visualizza Dati su Mappa</button>
            <button type="button" class="btn btn-outline-danger" id="EliminaMarker">EliminaMarkerinMappa</button>
        </div>
    </div>
    @Html.LabelFor(model => model.DescrizioneFile, htmlAttributes: new { @class = "control-label col-md-2" })
<div class="col-md-10">
    @Html.DropDownList("DescrizioneFile",(SelectList)ViewBag.DescrizioneFile,"", new { htmlAttributes = new { @class = "form-control" } })
    @*@Html.DropDownList("DescrizioneFile",ViewBag.DescrizioneFile as SelectList,"", htmlAttributes: new { @class = "form-control" })*@
</div>

    <div>
        <br />

        <div id="mapid"></div>
    </div>




    <script>
        for (var i = 0; i < localStorage.length; i++) {
            $("#OrigineDati").append(new Option(localStorage.key(i)));
        }
        $("#OrigineDati").blur(function () {
            var fileGeo = $('#OrigineDati').val();


        $("#Seleziona").click(function () {

                var sistema_geo = $('#OrigineDati').val();
            console.log($('#OrigineDati').val());






            $.ajax({
                dataType: "json",
                type: "POST",
                url: "Conferma/Index",
                data: { 'Sistema': sistema_geo },
                success: function (data) {
                    if (data.code === 1) {



                        jQuery.ajax({
                            //definisco il tipo della chiamata
                            type: "POST",
                            // specifico la URL della risorsa da contattare
                            url: '@Url.Action("JsonRisultati", "OpenStreetMap")',
                            // passo dei dati alla risorsa remota
                            dataType: "json",
                            //    contentType: 'application/json; charset=utf-8',

                            // Tipo di dato che si riceve di ritorno

                            // imposto un'azione per il caso di successo
                            success: function (data) {


                            var layerControl_OpenStreetMap = L.control.layers().addTo(mymap);
                            var layerGroup_OpenStreetMap = L.layerGroup().addTo(mymap);

                                for (var i in data) {

                                    var marker = L.marker([data[i].Lat.replace(",", "."), data[i].Lon.replace(",", ".")])
                                    marker.bindPopup("<b>Indirizzo: </b>" + data[i].Indirizzo + (data[i].hasOwnProperty('DENOMINAZIONE') && data[i].DENOMINAZIONE ? "<br /><b>Denominazione: </b>" + data[i].DENOMINAZIONE : "")+
                                        "<br /><b>Info: </b>" + data[i].Note2 );
                                    layerGroup_OpenStreetMap.addLayer(marker);
                                }
                                layerControl_OpenStreetMap.addOverlay(layerGroup_OpenStreetMap, "OpenStreetMap");

                            },

                            error: function () {
                                alert("Chiamata fallita!!!");
                            }
                        });

                    } else if (fileGeo != null) {


                        const ritorno = localStorage.getItem(fileGeo);

                        if (ritorno) {
                            // Try e un verifica
                            try {
                                const data = JSON.parse(ritorno);
                                if (data && Array.isArray(data)) {





                                    var layerControl = L.control.layers().addTo(mymap);


                                    var layerGroup = L.layerGroup().addTo(mymap);


                                    for (var i in data) {

                                        var marker = L.marker([data[i].geo_Latitude.replace(",", "."), data[i].geo_Longitude.replace(",", ".")])
                                        marker.bindPopup("<b>Indirizzo: </b>" + data[i].Indirizzo + (data[i].hasOwnProperty('DENOMINAZIONE') && data[i].DENOMINAZIONE ? "<br /><b>Denominazione: </b>" + data[i].DENOMINAZIONE : ""));
                                        layerGroup.addLayer(marker);

                                    }

                                    layerControl.addOverlay(layerGroup, fileGeo);
                                    console.log(layerControl)

                                    $('#EliminaMarker').click(function () {
                                        mymap.eachLayer(function (layer) {
                                            mymap.removeLayer(layerGroup);
                                            mymap.removeControl(layerControl);
                                        });
                                    });


                                    } else
                                        alert("Errore dati non come array");
                                } catch {
                                    alert("Errore dati non in formato JSON");
                                }

                            }

                        return;
                        }

                    else if (data.code == 2) {

                            window.location.href = '@Url.Action("Index","Home")';
                        }

                    }
                });
            });
        });


        var mymap = L.map('mapid').setView([43.35, 13.30], 8);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(mymap);






    </script>

    <br />
    @Html.ActionLink("Seleziona Sistema", "SelezionaSistema", "Home", new { @class = "btn btn-secondary" })
</body>
</html>
